% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binningsEqual.R
\name{binningsEqual}
\alias{binningsEqual}
\title{Title binningsEqual}
\usage{
binningsEqual(
  data,
  y,
  x = NULL,
  nbins = 5,
  showCols = c("vars", "bins", "count", "countRate", "nmlCount", "nmlCountCum",
    "nmlCountCumRate", "rpsCount", "rpsCountCum", "rpsCountCumRate", "rpsRate", "woe",
    "iv", "totalIv", "totalIvAdj", "binsLift", "shape", "splits", "isSpecial"),
  responseSign = c("bad", "1", "no", "Âùè", "response"),
  specialValue = NULL,
  ifSpecialNeeds = 0,
  specialVarValue = NULL,
  ifSpecialVarNeeds = 0,
  supplyCl = NULL
)
}
\arguments{
\item{data}{A data frame.}

\item{y}{Response value label column name.}

\item{x}{Variable value label column name.}

\item{nbins}{Number of bins.}

\item{showCols}{Column of results,The full column name is c('vars', 'bins', 'count', 'countRate', 'nmlCount', 'nmlCountCum', 'nmlCountCumRate', 'rpsCount', 'rpsCountCum', 'rpsCountCumRate', 'rpsRate', 'woe', 'iv', 'totalIv', 'totalIvAdj', 'binsLift', 'shape', 'splits', 'isSpecial')}

\item{responseSign}{Response value label name.Default is c('bad','1','no','response').}

\item{specialValue}{Values that need to be binned separately, which are globally valid for the data set.}

\item{ifSpecialNeeds}{Whether the global special value remains in the data when binning.}

\item{specialVarValue}{The value that needs to be binned separately, valid for the specified variable, must be a list.}

\item{ifSpecialVarNeeds}{Whether the special value of the variable dimension is included in the calculation when binning.}

\item{supplyCl}{The number of cores in the parallel backend, considering that most of the analysis will be performed on the server, in order to avoid affecting others, half of the core number is used by default.}
}
\value{
A binned list of all variables.
}
\description{
Equal frequency binning.
}
\examples{
library(data.table)

data("germancredit", package="scorecard")

data <- germancredit

##  ALL

binsEqual <- binningsEqual(
  data = data[,c(2,5,13,21)]
  , y = 'creditability'
)

binsEqualDt <- rbindlist(binsEqual)

##  One

binsEqualOne <- binningsEqual(
  data = data[,c(2,5,13,21)]
  , y = 'creditability'
  , x = 'duration.in.month'
)


}
