% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/riskForm.R
\name{riskForm}
\alias{riskForm}
\title{Title riskForm}
\usage{
riskForm(
  pred,
  label,
  method = "freq",
  nbins = 10,
  ord = "desc",
  labelSign = c("bad", "1", "no", "response"),
  specify = NULL,
  showCols = c("predCut", "count", "countRate", "countRateCum", "nmlCount",
    "nmlCountCum", "nmlCountCumRate", "rpsCount", "rpsCountCum", "rpsCountCumRate",
    "rpsRate", "woe", "iv", "totalIv", "binsLift", "accumLift")
)
}
\arguments{
\item{pred}{The prediction result of the predict function}

\item{label}{Y label}

\item{method}{'freq' 'width' 'chimerge'}

\item{nbins}{Number of bins}

\item{ord}{Fractional or probabilistic monotonic direction,'desc' or 'asc'.}

\item{labelSign}{Response value label name.Default is c('bad','1','no','response').}

\item{specify}{Whether to specify special binning, if specified please enter a numeric vector.}

\item{showCols}{Column of results,The full column name is c('vars', 'bins', 'count', 'countRate', 'nmlCount', 'nmlCountCum', 'nmlCountCumRate', 'rpsCount', 'rpsCountCum', 'rpsCountCumRate', 'rpsRate', 'woe', 'iv', 'totalIv', 'totalIvAdj', 'binsLift', 'shape', 'splits', 'isSpecial').}
}
\value{
Risk table for each bin interval
}
\description{
Risk table for each bin interval
}
\examples{
library(data.table)

data("germancredit", package="scorecard")

data <- germancredit

##  Convert Y labels

data <- transformResponse(data,y = 'creditability')

dataList <- splitDt(data = data,ratio = c(0.7,0.3),seed = 520)

labelList <- lapply(dataList, function(x) x$y)

##  bins

binsChi <- binningsChimerge(
  data = data
  , y = 'y'
)

binsChiDt <- rbindlist(binsChi)

## woe

woeData <- woeTrans(data,y = 'y',bins = binsChi)

woeDataList <- lapply(dataList,function(x) woeTrans(x,y = 'y',bins = binsChi))

## glm

fit = glm(
  y ~ .
  , family = binomial()
  , data = woeDataList$train
)

summary(fit)

## stepwise by aic

fitStepAic <- step(
  fit
  , direction = 'both'
  , k = 2
  , trace = FALSE
)

summary(fitStepAic)

# ## stepwise by bic
#
# fitStepBic <- step(
#   fit
#   , direction = 'both'
#   , k = log(nrow(woeDataList$train)))
#   , trace = FALSE
# )
#
# summary(fitStepBic)

## pred

predList <- lapply(woeDataList, function(x) predict(fitStepAic, x, type='response'))

## performance

modelPerformance <- modelEffect(
  pred = predList
  , label = labelList
  , ord = "desc"
)

modelPerformance

##  score and scorecard

### Only output the final model score

modelScoreRes <- lapply(predList, function(x) modelScore(x))

### scorecard

sc <- scoreCard(
  bins = binsChi
  , logitModel = fitStepAic
)

scDt <- rbindlist(sc, fill = T)

riskForm(
 pred = modelScoreRes
 , label = labelList
 , ord = 'asc'
)
}
